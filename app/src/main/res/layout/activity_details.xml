<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/main_content"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <!--第一部分：伸缩工具栏-->
    <!--
       AppBarLayout

        app:layout_scrollFlag
            AppBarLayout里面定义的view只要设置了app:layout_scrollFlags属性，就可以在RecyclerView滚动事件发生的时候被触发：
            app:layout_scrollFlags属性里面必须至少启用scroll这个flag，想滚动就必须设置这个
            这样这个view才会滚动出屏幕，否则它将一直固定在顶部。可以使用的其他flag有：

        enterAlways

        exitUntilCollapsed
            同样顾名思义，这个flag时定义何时退出，当你定义了一个minHeight，
            这个view将在滚动到达这个最小高度的时候消失。

        enterAlwaysCollapsed
            顾名思义，这个flag定义的是何时进入（已经消失之后何时再次显示）。
            假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最
            小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完。


    -->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:fitsSystemWindows="true"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        <!--
             CollapsingToolbarLayout=======

             contentScrim - 设置当完全CollapsingToolbarLayout折叠(收缩)后的背景颜色。
             expandedTitleMarginStart -   设置扩张时候(还没有收缩时)title向左填充的距离。
             expandedTitleMarginEnd  -    没扩张时候


             5. CollapseMode ：子视图的折叠模式，有两种
                “pin”：固定模式，在折叠的时候最后固定在顶端；
                “parallax”：视差模式，在折叠的时候会有个视差折叠的效果。
                 我们可以在布局中使用属性app:layout_collapseMode=parallax来改变。
         -->

        <!--exitUntilCollapsed:  此刻如果没有这个属性，toolbar将也会隐藏 ***********-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:fitsSystemWindows="true"
            android:minHeight="?attr/actionBarSize"
            app:contentScrim="?attr/colorPrimary"
            app:expandedTitleMarginEnd="64dp"
            app:expandedTitleMarginStart="40dp"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">


            <!-- android:fitsSystemWindows="true"  此处有这个属性，状态栏才会透明，为什么-->
            <ImageView
                android:id="@+id/image_collapsing"
                android:layout_width="match_parent"
                android:layout_height="380dp"
                android:fitsSystemWindows="true"
                android:scaleType="fitXY"
                android:transitionName="@string/transition_fab"
                app:layout_collapseMode="parallax" />


            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar_collapsing"
                android:layout_width="match_parent"
                android:layout_height="?android:actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
        </android.support.design.widget.CollapsingToolbarLayout>

    </android.support.design.widget.AppBarLayout>


    <!--第二部分：主要内容，NestedScrollView和ScrollView基本功能一致，只不过NestedScrollView可以兼容新的控件-->
    <include layout="@layout/recyclerview"></include>



    <!--第三部分：漂浮按钮-->
    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab_detail"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="@dimen/fab_margin"
        android:clickable="true"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|right|end" />

</android.support.design.widget.CoordinatorLayout>